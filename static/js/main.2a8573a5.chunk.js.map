{"version":3,"sources":["theme.js","components/nav/Logo.js","components/nav/Drawer.js","components/nav/Nav.js","components/nav/NavProvider.js","components/home/PortfolioCard.js","components/home/FeaturedProjects.js","components/home/InTheNews.js","components/home/About.js","components/home/index.js","useWindowSize.js","components/portfolio/Blob.js","components/portfolio/Section.js","components/Header.js","components/portfolio/Skills.js","components/portfolio/Education.js","components/portfolio/projects/components/Project.js","components/portfolio/projects/components/ProjectLink.js","components/portfolio/projects/ProjectsList.js","components/portfolio/projects/index.js","components/portfolio/index.js","components/misc/TeacherPie.js","components/misc/index.js","components/contact/Socials.js","components/contact/index.js","index.js"],"names":["theme","createMuiTheme","overrides","MuiButton","root","textTransform","palette","common","black","white","primary","main","secondary","error","red","A400","background","default","typography","fontFamily","useStyles","makeStyles","logo","color","backgroundColor","fontWeight","paddingTop","paddingBottom","Logo","classes","Typography","component","variant","className","DrawerLink","props","ListItem","onClick","ListItemText","to","children","DrawerComponent","useState","isOpen","setOpen","close","useTheme","Drawer","open","onClose","anchor","List","Grid","container","style","justifyContent","alignItems","paddingRight","spacing","item","IconButton","fontSize","Section","xs","navContainer","padding","navLinksContainer","Nav","isMobile","useMediaQuery","breakpoints","down","md","NavContext","createContext","NavProvider","hasNav","setHasNav","closeNav","next","openNav","value","useMemo","Provider","flex","card","height","spacer","marginTop","title","btn","description","display","overflow","textOverflow","PortfolioCard","image","link","btnText","externalLink","Paper","src","width","alt","alignContent","href","Button","HashLink","featuredProjects","marginBottom","FeaturedProjects","articles","InTheNews","AboutMe","about","AboutTheSite","About","imgContainer","img","quote","quoteSubtitle","explore","textAlign","portfolio","dark","Home","Container","size","window","id","useWindowSize","undefined","windowSize","setWindowSize","useEffect","handleResize","innerWidth","innerHeight","addEventListener","removeEventListener","Blob","myBlob","MutationObserver","mutations","me","canvas","document","getElementById","myCanvas","DrawBlob","vectors","generatePoints","sides","colorFunction","context","grad","createRadialGradient","addColorStop","fillStyle","fillRect","speed","scramble","handleCanvas","disconnect","observe","childList","subtree","Blobs","pcnt","blobs","Array","Math","floor","keys","map","i","random","left","position","top","zIndex","hrAccent","border","sectionBody","divider","header","Header","DS_MLChip","label","Chip","DS_ML","WebdevChip","webdev","OtherChip","other","Skills","skills","margin","overflowX","edList","Education","project","up","btnsContainer","toTop","Project","subtitle","imgWidth","imgHeight","noDivider","chips","buttonLinks","process","url","text","chip","scrollTo","ProjectLink","target","projectsList","content","Projects","PortfolioAnchorLink","contentsLink","ProjectAnchorLink","contentsLinkDescription","transform","textDecoration","textIndent","paddingLeft","bottom","right","Portfolio","setBlobs","screen","$","Fragment","maxWidth","hideAccent","legend","OP","full","BL","TSD","LEA","PG","Box","TeacherPie","pie","useRef","answers","done","setDone","Question","answer","setAnswer","showError","setShowError","FormControl","Select","onChange","e","newAnswer","options","o","console","log","current","question","slices","newPie","slice","concat","oldAnswer","definitions","QDataAvailableTeacherIEP","q","setCurrentQ","MenuItem","QTeacherOtherIEP","QClassroomTeacherData","QRole","QTemp","currentQ","hovered","setHovered","location","reload","float","borderRight","reverse","data","onMouseOver","_","index","onMouseOut","animate","animationDuration","dataEntry","round","percentage","labelStyle","radius","labelPosition","center","viewBoxSize","getContent","MiscSwitch","page","useParams","useContext","SocialThumb","Icon","Link","marginRight","Socials","GitHubIcon","EmailIcon","LinkedInIcon","Contact","ReactDOM","render","flexFlow","ThemeProvider","CssBaseline","exact","path"],"mappings":"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","file":"static/js/main.2a8573a5.chunk.js","sourcesContent":["import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nlet theme = createMuiTheme({\r\noverrides: {\r\n    MuiButton: {\r\n        root: {\r\n            textTransform: 'none',\r\n        }\r\n    }\r\n},\r\npalette: {\r\n    common: {\r\n        black: \"rgb(35,31,32)\",\r\n        white: \"whitesmoke\"\r\n    },\r\n    primary: {\r\n    main: '#F28C28',\r\n    },\r\n    secondary: {\r\n    main: '#19857b',\r\n    },\r\n    error: {\r\n    main: red.A400,\r\n    },\r\n    background: {\r\n    default: \"whitesmoke\",\r\n    },\r\n},\r\ntypography: {\r\n    fontFamily: 'Poppins, sans-serif'\r\n},\r\n});\r\n\r\nexport default theme;","import {\r\n    Typography,\r\n    makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst Logo = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n        <Typography\r\n              component=\"h1\"\r\n              variant=\"h5\"\r\n              \r\n            >\r\n                <span className={classes.logo}>\r\n                &nbsp;Gregory Glatzer&nbsp;\r\n                </span>\r\n              \r\n        </Typography>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    logo: {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: theme.palette.primary.main,\r\n        fontWeight: \"bolder\",\r\n        paddingTop: \"3px\",\r\n        paddingBottom: \"3px\",\r\n    }\r\n}))\r\n\r\n\r\nexport default Logo;","import React, { useState } from \"react\";\r\nimport {\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  IconButton,\r\n  Typography,\r\n  Grid,\r\n  useTheme\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport Logo from \"./Logo\";\r\n\r\nconst DrawerLink = (props) => {\r\n  return (\r\n    <ListItem onClick={props.onClick} className=\"no-dash\">\r\n      <ListItemText>\r\n        <Link to={props.to} className=\"nav-text nav-link\">\r\n          <Typography component=\"h3\" variant=\"h5\">\r\n            {props.children}\r\n          </Typography>\r\n        </Link>\r\n      </ListItemText>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nconst DrawerComponent = () => {\r\n  const [isOpen, setOpen] = useState(false);\r\n\r\n  const open = () => setOpen(true);\r\n  const close = () => setOpen(false);\r\n\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <>\r\n      <Drawer open={isOpen} onClose={close} anchor=\"top\">\r\n        <List>\r\n          <ListItem onClick={close} className=\"no-dash\">\r\n            <ListItemText>\r\n              <Logo />\r\n            </ListItemText>\r\n          </ListItem>\r\n          <DrawerLink to=\"/\" onClick={close}>\r\n            Home\r\n          </DrawerLink>\r\n          <DrawerLink to=\"/portfolio\" onClick={close}>\r\n            Portfolio\r\n          </DrawerLink>\r\n          <DrawerLink to=\"/contact\" onClick={close}>\r\n            Contact\r\n          </DrawerLink>\r\n        </List>\r\n      </Drawer>\r\n      <Grid container style={{justifyContent: \"space-between\", alignItems: \"center\", paddingRight: theme.spacing(2)}}>\r\n        <Grid item>\r\n          <IconButton onClick={() => (isOpen ? close() : open())}>\r\n            <MenuIcon fontSize=\"large\" />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item>\r\n          <Link to={\"/\"} className=\"nav-text\">\r\n            <Logo />\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default DrawerComponent;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, Typography, useMediaQuery } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport DrawerComponent from \"./Drawer\";\r\nimport Logo from \"./Logo\";\r\n\r\nconst Section = (props) => {\r\n  return (\r\n    <Grid item xs={\"auto\"}>\r\n      <Link to={props.to} className=\"nav-text nav-link\">\r\n        <Typography component=\"h3\" variant=\"h5\">\r\n          {props.children}\r\n        </Typography>\r\n      </Link>\r\n    </Grid>\r\n  );\r\n};\r\n\r\n\r\nfunction Nav() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n\r\n  return (\r\n    <nav>\r\n      {\r\n        isMobile ?\r\n          <DrawerComponent />\r\n        :\r\n      <Grid container className={classes.navContainer}>\r\n        <Grid item xs={12} md={5}>\r\n          <Link to={\"/\"} className=\"nav-text\">\r\n            <Logo />\r\n          </Link>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          xs={12}\r\n          md={7}\r\n          spacing={5}\r\n          className={classes.navLinksContainer}\r\n        >\r\n          <Section to={\"/\"}>Home</Section>\r\n          <Section to=\"/portfolio\">Portfolio</Section>\r\n          <Section to=\"/contact\">Contact</Section>\r\n        </Grid>\r\n      </Grid>\r\n    }\r\n    </nav>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navContainer: {\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n  },\r\n  navLinksContainer: {\r\n    justifyContent: \"end\",\r\n  },\r\n}));\r\n\r\nexport default Nav;\r\n","import {createContext, useContext, useMemo, useState} from \"react\";\r\nimport Nav from './Nav'\r\n\r\nconst NavContext = createContext({})\r\n\r\nconst NavProvider= ({ children }) => {\r\n    const [hasNav, setHasNav] = useState(true)\r\n\r\n    const closeNav = (next) => {\r\n        setHasNav(false)\r\n\r\n        if (next)\r\n            next()\r\n    }\r\n\r\n    const openNav = (next) => {\r\n        setHasNav(true)\r\n\r\n        if (next)\r\n            next()\r\n    }\r\n\r\n    const value = useMemo(() => ({\r\n        hasNav,\r\n        closeNav,\r\n        openNav\r\n    }), [\r\n        hasNav,\r\n        closeNav,\r\n        openNav\r\n    ])\r\n\r\n    return (\r\n        <NavContext.Provider value={value}>\r\n        { hasNav && <Nav style={{flex: \"0 1 auto\"}}/> }\r\n        { children }\r\n        </NavContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useNav = () => useContext(NavContext)\r\nexport default NavProvider","import {\r\n  makeStyles,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { HashLink } from 'react-router-hash-link';\r\n\r\nconst PortfolioCard = ({ title, description, image, link, btnText, externalLink=false }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper component={Grid} className={classes.card} container spacing={1}>\r\n\r\n      {/* Main content, including title, description, and image */}\r\n      <Grid item container spacing={1}>\r\n        <Grid item>\r\n        <Typography variant=\"h5\" className={classes.title}>{title}</Typography>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={8} >\r\n            <Typography variant=\"body1\"><p className={classes.description}>{description}</p></Typography>\r\n        </Grid>\r\n        <Grid\r\n            item\r\n            container\r\n            xs={12}\r\n            md={4}\r\n            style={{ justifyContent: \"end\", alignItems: \"center\" }}\r\n        >\r\n            <img\r\n              src={image}\r\n              style={{ width: \"100%\", height: \"auto\" }}\r\n              alt={title}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* \"Read More\" Button (We use Grid here to get flex-end) */}\r\n        <Grid item container style={{ justifyContent: \"end\", alignContent: \"flex-end\" }}>\r\n          <Grid item>\r\n            {externalLink ? <a\r\n            href={link}\r\n            className=\"noDecoration\"\r\n            >\r\n              <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.btn}\r\n            >\r\n              {btnText}\r\n            </Button>\r\n            </a>\r\n\r\n            : \r\n              <Button\r\n              component={HashLink}\r\n              to={link}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.btn}\r\n            >\r\n              {btnText}\r\n            </Button>\r\n            }\r\n            \r\n          </Grid>\r\n        </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    padding: theme.spacing(2),\r\n    height: \"100%\"\r\n  },\r\n  spacer: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  title: {\r\n    height: \"100%\"\r\n  },\r\n  btn: {\r\n    color: theme.palette.common.white,\r\n  },\r\n  description: {\r\n    display: \"-webkit-box\",\r\n    \"-webkit-line-clamp\": 6,\r\n    \"-webkit-box-orient\": \"vertical\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\"\r\n  }\r\n}));\r\n\r\nexport default PortfolioCard;\r\n","import {\r\n    makeStyles,\r\n    Grid,\r\n    Typography,\r\n} from '@material-ui/core'\r\n\r\nimport PortfolioCard from './PortfolioCard'\r\n\r\nconst FeaturedProjects = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n        <Typography component=\"h2\" variant=\"h4\">\r\n          Featured Projects\r\n        </Typography>\r\n        <Grid container spacing={3} className={classes.featuredProjects}>\r\n            <Grid item xs={12} md={6}>\r\n            <PortfolioCard\r\n            title=\"Elephant movement research with IST Faculty\"\r\n            description=\"Working with IST Faculty at Penn State, \r\n            I conducted research on the movement of elephants in sub-saharan Africa, including what environmental and spatial factors affects their movement. \r\n            Using DBSCAN and KMeans clustering algorithms, I developed a pipeline that yields potential &quot;locations of interest&quot; for elephants. \r\n            This research led to the publication of my research paper, &quot;An Analysis of Elephants' Movement Data in Sub-Saharan Africa Using Clustering&quot; in the TAWIRI Conference in Arusha, Tanzania.\"\r\n            image={process.env.PUBLIC_URL + \"/Range Cluster Hotspots.png\"}\r\n            link=\"/portfolio#elephant-movement-research\"\r\n            btnText=\"Read More...\"\r\n            />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n            <PortfolioCard\r\n            title=\"Computer Vision-Based Glyph and Label Extraction (CV-BAGLE)\"\r\n            description=\"From the nightly news to academic papers, you can find visualizations\r\n            nearly everywhere. In the CV-BAGLE project, my team and I developed a tool that extracts glyphs and labels from\r\n            data visualizations. An example of a glyph is a bar in a bar chart, or a line in a line chart. Labels can consist\r\n            of supplementary text in the chart, axis labels, legends, etc. Using a combination of computer vision techniques,\r\n            namely with OpenCV, along with OCR techniques (Tesseract), we were able to extract glyphs and labels from data visualizations.\r\n            From these extracted glyphs and labels,\"\r\n            image={process.env.PUBLIC_URL + \"/CV-BAGLE.png\"}\r\n            link=\"/portfolio#cv-bagle\"\r\n            btnText=\"Read More...\"\r\n            />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                \r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                \r\n            </Grid>\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    featuredProjects: {\r\n        marginTop: theme.spacing(5),\r\n        marginBottom: theme.spacing(5),\r\n    }\r\n}))\r\n\r\nexport default FeaturedProjects;","import {\r\n    makeStyles,\r\n    Grid,\r\n    Typography,\r\n} from '@material-ui/core'\r\n\r\nimport PortfolioCard from './PortfolioCard'\r\n\r\nconst InTheNews = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n        <Typography component=\"h2\" variant=\"h4\">\r\n          Articles, News, and More\r\n        </Typography>\r\n        <Grid container spacing={3} className={classes.articles}>\r\n            <Grid item xs={12} md={6}>\r\n            <PortfolioCard\r\n            title=\"Data Skeptic Podcast Interview\"\r\n            description=\"My interview with Data Skeptic, discussing my elephant movement research.\"\r\n            image={process.env.PUBLIC_URL + \"/Data Skeptic.jpg\"}\r\n            link=\"https://dataskeptic.com/blog/episodes/2022/tracking-elephant-clusters\"\r\n            externalLink\r\n            btnText=\"Listen now\"\r\n            />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n            <PortfolioCard\r\n            title=\"Penn State News article highlighting my work\"\r\n            description=\"Read the article written about my accomplishments with the university written by Penn State News.\"\r\n            image={process.env.PUBLIC_URL + \"/PennStateNews.jpeg\"}\r\n            link=\"https://www.psu.edu/news/information-sciences-and-technology/story/ist-students-research-involves-tracking-elephant-movement/\"\r\n            externalLink\r\n            btnText=\"Read More...\"\r\n            />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                \r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                \r\n            </Grid>\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    articles: {\r\n        marginTop: theme.spacing(5),\r\n        marginBottom: theme.spacing(5),\r\n    }\r\n}))\r\n\r\nexport default InTheNews;","import { makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <>\r\n      <AboutMe />\r\n      <AboutTheSite />\r\n    </>\r\n  );\r\n};\r\n\r\nconst AboutMe = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Typography component=\"h2\" variant=\"h4\">\r\n        About Me\r\n      </Typography>\r\n      <Typography component=\"p\" variant=\"body1\" className={classes.about}>\r\n        <p>\r\n          Welcome to my site. I am a Senior at Penn State University working\r\n          towards a BS in Applied Data Science. I believe in lifelong learning,\r\n          and that the best way to increase my skills is to listen to others and\r\n          practice as much as I can. Whether it is side projects such as\r\n          combining music and CS, doing research with Penn State faculty, or\r\n          working on team competitions such as the Nittany AI Challenge, I try\r\n          to immerse myself into the world of all things data science and seize\r\n          every opportunity I can get!\r\n        </p>\r\n        <p>\r\n          In addition to my dedication to data science, I also have a passion\r\n          for music. I am a classical and jazz clarinetist, minoring in jazz\r\n          clarinet performance. I have performed in state and national\r\n          orchestras and concert bands and have even performed at Carnegie Hall\r\n          (yes, I practiced to get there)!\r\n        </p>\r\n        <p>\r\n          Please enjoy browsing through my portfolio, and feel free to reach out\r\n          with any questions!\r\n        </p>\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AboutTheSite = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Typography component=\"h2\" variant=\"h4\">\r\n        How this site is made\r\n      </Typography>\r\n      <Typography component=\"p\" variant=\"body1\" className={classes.about}>\r\n        <p>\r\n          I have created this site from scratch using React, Material-UI, and\r\n          GitHub Pages for hosting.\r\n        </p>\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  about: {\r\n    marginTop: theme.spacing(5),\r\n    marginBottom: theme.spacing(5),\r\n  },\r\n}));\r\n\r\nexport default About;\r\n","import {\r\n  makeStyles,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  useTheme,\r\n  Button\r\n} from \"@material-ui/core\";\r\n\r\nimport FeaturedProjects from \"./FeaturedProjects\";\r\nimport InTheNews from \"./InTheNews\";\r\nimport About from \"./About\";\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} md={6}>\r\n          <Typography component=\"h1\" variant=\"h3\" className={classes.quote}>\r\n            Exploring Data Science and Machine Learning\r\n          </Typography>\r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            className={classes.quoteSubtitle}\r\n          >\r\n            one dataset at a time...\r\n          </Typography>\r\n\r\n          <div style={{textAlign: \"center\"}}>\r\n            <Button \r\n            variant=\"contained\" \r\n            className={classes.btn} \r\n            size=\"large\"\r\n            onClick={() =>  window.open(process.env.PUBLIC_URL + '/resume.pdf', \"_blank\")}\r\n            >\r\n              Download resume as a PDF\r\n          </Button>\r\n  \r\n          <Typography variant=\"h6\" style={{color: theme.palette.common.black}}>\r\n            <b>Scroll down for more</b>\r\n            \r\n          </Typography>\r\n          </div>\r\n          \r\n\r\n        </Grid>\r\n        <Grid item xs={12} md={6} className={classes.imgContainer}>\r\n          <img\r\n            src={process.env.PUBLIC_URL + \"/me2.jpg\"}\r\n            className={classes.img}\r\n            alt=\"Gregory Glatzer\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div id=\"portfolio\" className={classes.portfolio}>\r\n        <FeaturedProjects/>\r\n        <InTheNews/>\r\n        <About/>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"80%\",\r\n    marginBottom: theme.spacing(5),\r\n    marginTop: theme.spacing(5),\r\n  },\r\n  imgContainer: {\r\n    justifyContent: \"center\",\r\n  },\r\n  img: {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n  quote: {\r\n    fontWeight: \"bold\",\r\n    color: theme.palette.primary.main,\r\n  },\r\n  quoteSubtitle: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(3),\r\n    fontWeight: \"bold\",\r\n    color: \"darkgrey\",\r\n  },\r\n  explore: {\r\n    textAlign: \"center\",\r\n    color: \"grey\",\r\n    marginTop: theme.spacing(9),\r\n  },\r\n  portfolio: {\r\n    marginTop: theme.spacing(5),\r\n  },\r\n  btn: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(5),\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    \r\n  },\r\n}));\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// Hook\r\nfunction useWindowSize() {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize();\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize;","import DrawBlob, { generatePoints} from 'blob-animated';\r\n\r\n\r\nconst Blob = (props) => {\r\n\r\n    const { id } = props;\r\n\r\n\r\n    let myBlob = null;\r\n\r\n    // callback executed when canvas was found\r\n    function handleCanvas(canvas) {\r\n        var myCanvas = document.getElementById(\r\n            id);\r\n        \r\n        myBlob = new DrawBlob({\r\n            vectors: generatePoints({ sides: 5 }),\r\n            canvas: myCanvas,\r\n            colorFunction: context => {\r\n                var grad = context.createRadialGradient(400, 100, 100, 450, 300, 420);\r\n\r\n                grad.addColorStop(0, '#aff2fa35'); // lighter color\r\n                grad.addColorStop(1, '#2f7ed435'); // darker color\r\n\r\n                context.fillStyle = grad;\r\n                context.fillRect(0, 0, 0, 200);\r\n            },\r\n            speed: 100,\r\n            scramble: 0.13,\r\n        })\r\n    }\r\n\r\n    // set up the mutation observer\r\n    var observer = new MutationObserver(function (mutations, me) {\r\n    // `mutations` is an array of mutations that occurred\r\n    // `me` is the MutationObserver instance\r\n    var canvas = document.getElementById(id);\r\n    if (canvas) {\r\n        handleCanvas(canvas);\r\n        me.disconnect(); // stop observing\r\n        return;\r\n    }\r\n    });\r\n\r\n    // start observing\r\n    observer.observe(document, {\r\n    childList: true,\r\n    subtree: true\r\n    });\r\n\r\n    return myBlob\r\n}\r\n\r\n\r\nconst Blobs = ({pcnt}) => {\r\n    const blobs = [...Array(Math.floor(pcnt)).keys()].map(i => {\r\n\r\n            // decide if a blob will be created\r\n             const createBlobAtLocation = Math.random() > 0.3;\r\n             if (!createBlobAtLocation){\r\n                 return null;\r\n             }\r\n       \r\n  \r\n             const isLeft = Math.random() > 0.5;\r\n             const left = isLeft ? Math.random() * 40 : 60 + Math.random() * 40;\r\n\r\n              return <>\r\n              <canvas\r\n                id={`canvas-${i}`}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: `${(i+1) * 100}%`,\r\n                  left: `${left}%`,\r\n                  width: `${10 + Math.random() * 15}%`,\r\n                }}\r\n              ></canvas>\r\n              <Blob id={`canvas-${i}`} />\r\n              </>\r\n    })\r\n\r\n    return <div style={{ zIndex: 1 }}>\r\n        {/* <canvas id=\"my-canvas\" style={{position: \"absolute\", top: \"50%\", left: 0, width: \"10%\"}}></canvas>\r\n            <Blob id=\"my-canvas\"/> */}\r\n        {blobs}\r\n        {/* <canvas\r\n          id=\"my-canvas2\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"500%\",\r\n            left: \"80%\",\r\n            width: \"23%\",\r\n          }}\r\n        ></canvas>\r\n        <Blob id=\"my-canvas2\" />\r\n        <canvas\r\n          id=\"my-canvas3\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"170%\",\r\n            left: \"5%\",\r\n            width: \"10%\",\r\n          }}\r\n        ></canvas>\r\n        <Blob id=\"my-canvas3\" />\r\n        <canvas\r\n          id=\"my-canvas4\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"300%\",\r\n            left: \"3%\",\r\n            width: \"23%\",\r\n          }}\r\n        ></canvas>\r\n        <Blob id=\"my-canvas4\" />\r\n        <canvas\r\n          id=\"my-canvas5\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"500%\",\r\n            left: \"60%\",\r\n            width: \"10%\",\r\n          }}\r\n        ></canvas>\r\n        <Blob id=\"my-canvas5\" />\r\n        <canvas\r\n          id=\"my-canvas6\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"600%\",\r\n            left: \"30%\",\r\n            width: \"20%\",\r\n          }}\r\n        ></canvas>\r\n        <Blob id=\"my-canvas5\" /> */}\r\n        \r\n      </div>\r\n}\r\n\r\n\r\nexport default Blobs;","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst Section = (props) => {\r\n    const { divider = false } = props;\r\n  \r\n    const classes = useStyles();\r\n  \r\n    return (\r\n      <section>\r\n        <Typography variant=\"h3\" id={props.id}>{props.header}</Typography>\r\n        <Typography variant=\"body1\" className={classes.sectionBody}>\r\n          {props.children}\r\n        </Typography>\r\n        {!divider ? (\r\n          <div style={{ marginBottom: \"102px\" }}></div>\r\n        ) : (\r\n          <hr className={classes.hrAccent} />\r\n        )}\r\n      </section>\r\n    );\r\n  };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    hrAccent: {\r\n        border: \"none\",\r\n        height: \"2px\",\r\n        width: \"100%\",\r\n        marginBottom: \"40px\",\r\n        background: \"#153040\",\r\n      },\r\n    sectionBody: {\r\n      paddingTop: theme.spacing(2),\r\n    },\r\n}))\r\n\r\nexport default Section;","import { makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst Header = (props) => {\r\n    const classes = useStyles();\r\n    return <>\r\n        <Typography variant=\"h2\" className={classes.header}>{props.children}</Typography>\r\n    </>\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: \"80%\",\r\n    },\r\n    header: {\r\n      textAlign: \"center\",\r\n      marginTop: theme.spacing(5),\r\n      marginBottom: theme.spacing(5),\r\n    }\r\n  }));\r\n\r\nexport default Header;","import { Grid, Typography, Chip } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { makeStyles} from \"@material-ui/core/styles\";\r\n\r\nimport Section from './Section';\r\n\r\nconst DS_MLChip = ({label}) => {\r\n  const classes = useStyles();\r\n  return <Chip\r\n  label={label}\r\n  className={classes.DS_ML}\r\n/>\r\n}\r\n\r\nconst WebdevChip = ({label}) => {\r\n  const classes = useStyles();\r\n  return <Chip\r\n  label={label}\r\n  className={classes.webdev}\r\n/>\r\n}\r\n\r\nconst OtherChip = ({label}) => {\r\n  const classes = useStyles();\r\n  return <Chip\r\n  label={label}\r\n  className={classes.other}\r\n/>\r\n}\r\n\r\nfunction Skills() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Section header=\"Skills\" id=\"skills\">\r\n          <Typography variant=\"body1\">\r\n            <Grid container spacing={6}>\r\n              <Grid item xs={12} md={4}>\r\n                <DS_MLChip label=\"Data Science / Machine Learning\"/>\r\n                <ul className={classes.skills}>\r\n                  <li>Python</li>\r\n                  <li>Scikit-learn</li>\r\n                  <li>SQL</li>\r\n                  <li>Bokeh, Matplotlib</li>\r\n                  <li>Pandas, NumPy</li>\r\n                  <li>Geopandas, Shapely</li>\r\n                  <li>Web Scraping</li>\r\n                  <li>Data Preprocessing</li>\r\n                </ul>\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <WebdevChip label=\"Web development\"/>\r\n                <ul className={classes.skills}>\r\n                  <li>React, Flask</li>\r\n                  <li>HTML/CSS, JavaScript</li>\r\n                  <li>Bootstrap</li>\r\n                  <li>Material-UI</li>\r\n                  <li>Recharts.js</li>\r\n                  <li>Google Firebase</li>\r\n                </ul>\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <OtherChip label=\"Other\"/>\r\n                <ul className={classes.skills}>\r\n                  <li>All-national, all-eastern, all-state clarinetist</li>\r\n                  <li>Saxophonist</li>\r\n                  <li>Flautist</li>\r\n                </ul>\r\n              </Grid>\r\n            </Grid>\r\n          </Typography>\r\n        </Section>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  skills: {\r\n    margin: 0,\r\n    padding: 0,\r\n    height: \"100%\",\r\n    overflowX: \"hidden\",\r\n  },\r\n\r\n  DS_ML: {\r\n    backgroundColor: \"#AFE1AF\",\r\n    color: theme.palette.common.black,\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  webdev: {\r\n    backgroundColor: \"#FFC300\",\r\n    color: theme.palette.common.black,\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  other: {\r\n    backgroundColor: \"#EE92F4\",\r\n    color: theme.palette.common.black,\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1rem\",\r\n  }\r\n}));\r\n\r\nexport { Skills, DS_MLChip, WebdevChip, OtherChip };\r\n","import { Grid, Typography, Chip } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { makeStyles} from \"@material-ui/core/styles\";\r\n\r\nimport Section from './Section';\r\n\r\nfunction Education() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Section header=\"Education\" id=\"education\">\r\n          <b>\r\n            The Pennsylvania State University, College of Information Sciences\r\n            and Technology\r\n          </b>\r\n          <br />\r\n          B.S. Applied Data Science\r\n          <br />\r\n          August 2019 – May 2023\r\n          <br />\r\n          Cumulative GPA: 3.95\r\n          <br />\r\n          <br />\r\n   \r\n          <b>Relevant Coursework</b>\r\n          <ul className={classes.edList}>\r\n            <li>CMPSC 131 - Programming and Computation I: Fundamentals</li>\r\n            <li>CMPSC 132 - Programming and Computation II: Data Structures</li>\r\n\r\n            <li>DS 200 - Introduction to Data Science</li>\r\n            <li>DS 220 - Data Management for Data Sciences</li>\r\n\r\n            <li>IST 110 - Introduction to Information, People And Technology</li>\r\n            <li>IST 111S - Seminar in Information Sciences and Technology</li>\r\n            <li>IST 210 - Organization of Data</li>\r\n            <li>IST 230 - Language, Logic, and Discrete Mathematics</li>\r\n\r\n            <li>MATH 220 - Matrices</li>\r\n\r\n            <li>STAT 200 - Elementary Statistics</li>\r\n            <li>STAT 318 - Elementary Probability</li>\r\n          </ul>\r\n    </Section>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    edList: {\r\n        margin: 0,\r\n        padding: 0,\r\n        height: \"100%\",\r\n        overflowX: \"hidden\",\r\n    }\r\n}));\r\n\r\nexport default Education;\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/styles\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\n\r\nconst Project = (props) => {\r\n  const {\r\n    title,\r\n    subtitle,\r\n    image,\r\n    imgWidth = undefined,\r\n    imgHeight = undefined,\r\n    id,\r\n    noDivider = false,\r\n    chips,\r\n    buttonLinks\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <>\r\n      <Grid item container className={classes.project}>\r\n        <Grid item container xs={12} md={image === undefined ? 12 : 8}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h4\" id={id} style={{marginTop: \"40px\"}}>{title}</Typography>\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{ paddingBottom: theme.spacing(4) }}\r\n            >\r\n              {subtitle}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        {image !== undefined && (\r\n          <Grid\r\n            container\r\n            item\r\n            xs={12}\r\n            md={4}\r\n            className={classes.imgContainer}\r\n          >\r\n            <img\r\n              src={process.env.PUBLIC_URL + image}\r\n              width={imgWidth}\r\n              height={imgHeight}\r\n            ></img>\r\n          </Grid>\r\n        )}\r\n\r\n        {/* Main content */}\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"body1\">{props.children}</Typography>\r\n        </Grid>\r\n\r\n        {/* Button Links */}\r\n        {\r\n          buttonLinks &&\r\n          \r\n          <Grid item container xs={12} spacing={2} className={classes.btnsContainer}>\r\n          {buttonLinks.map((link) => (\r\n            <Grid item>\r\n                <Button \r\n                  variant=\"contained\" \r\n                  color=\"secondary\" \r\n                  size=\"medium\"\r\n                  className={classes.btn}\r\n                  onClick={() =>  window.open(link.url, \"_blank\")}\r\n                  >\r\n                  {link.text}\r\n                </Button>\r\n       \r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        }\r\n        \r\n\r\n        {/* Skills */}\r\n        {chips &&\r\n\r\n        <>\r\n          <Grid item xs={12} style={{marginBottom: theme.spacing(2)}}>\r\n            <Typography variant=\"h4\">Project Skills</Typography>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            {chips.map(chip => <Grid item>{chip}</Grid>)}\r\n          </Grid>\r\n        </>\r\n        }\r\n\r\n        {/* Back to top button */}\r\n        <Button \r\n          className={classes.toTop} \r\n          variant=\"contained\"\r\n          onClick={() => window.scrollTo(0, 0)}\r\n          >Back to top &uarr;</Button>\r\n        \r\n        \r\n\r\n        {\r\n          !noDivider && <hr className={classes.hrAccent} />\r\n        }\r\n\r\n\r\n\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  project: {\r\n    marginBottom: theme.spacing(4)\r\n  },\r\n  imgContainer: {\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.up('md')]: {\r\n      justifyContent: \"end\"\r\n    },\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: \"center\"\r\n    }\r\n  },\r\n  hrAccent: {\r\n    border: \"none\",\r\n    height: \"2px\",\r\n    width: \"100%\",\r\n    marginTop: \"40px\",\r\n    background: \"#153040\",\r\n  },\r\n  btn: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.dark,\r\n    }\r\n  },\r\n  btnsContainer: {\r\n    justifyContent: \"end\", \r\n    margin: 0, \r\n    padding: 0, \r\n    marginBottom: theme.spacing(2)\r\n  },\r\n  toTop: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    color: theme.palette.common.white,\r\n    marginTop: theme.spacing(4),\r\n  }\r\n}));\r\n\r\nexport default Project;\r\n","const ProjectLink = (props) => {\r\n    return (\r\n      <span>\r\n        &nbsp;\r\n        <a href={props.to} target=\"_blank\" className=\"regularLink\">\r\n          {props.children}\r\n        </a>\r\n        &nbsp;\r\n      </span>\r\n    );\r\n  };\r\n\r\nexport default ProjectLink;","import Project from \"./components/Project\"\r\nimport ProjectLink from \"./components/ProjectLink\"\r\nimport { DS_MLChip, WebdevChip, OtherChip } from \"../Skills\"\r\n\r\nconst projectsList = [\r\n    <Project\r\n            title=\"Elephant Movement Research with IST Faculty\"\r\n            subtitle=\"Applying clustering to spatial data to find locations of interest for elephants\"\r\n            image=\"Range Cluster Hotspots.png\"\r\n            imgWidth={\"80%\"}\r\n            id=\"elephant-movement-research\"\r\n            chips={[\r\n              <DS_MLChip label=\"Python\" />,\r\n              <DS_MLChip label=\"Scikit-learn\" />,\r\n              <DS_MLChip label=\"Matplotlib\" />,\r\n              <DS_MLChip label=\"Pandas/Numpy\" />,\r\n              <DS_MLChip label=\"Geopandas\" />,\r\n              <DS_MLChip label=\"Shapely\" />,\r\n              <DS_MLChip label=\"Clustering Algorithms\" />,\r\n              <DS_MLChip label=\"Streamlit\" />,\r\n            ]}\r\n            buttonLinks={[\r\n              {text: \"Listen to my Data Skeptic interview\", url: \"https://dataskeptic.com/blog/episodes/2022/tracking-elephant-clusters\"},\r\n              {text: \"Read the paper\", url: \"https://www.researchgate.net/publication/355941394_An_Analysis_of_Elephants'_Movement_Data_in_Sub-Saharan_Africa_Using_Clustering/\"}\r\n            ]}\r\n          >\r\n            <p>\r\n              Working with IST Faculty at Penn State, I conducted research on the\r\n              movement of elephants in sub-saharan Africa, including what\r\n              environmental and spatial factors affects their movement. Using\r\n              DBSCAN and KMeans clustering algorithms, I developed a pipeline that\r\n              yields potential \"locations of interest\" for elephants. This\r\n              research led to the publication of my research paper,\r\n              <ProjectLink to=\"https://www.researchgate.net/publication/336907924_An_Analysis_of_Elephants_Movement_Data_in_Sub-Saharan_Africa_Using_Clustering\">\r\n                \"An Analysis of Elephants' Movement Data in Sub-Saharan Africa\r\n                Using Clustering\"\r\n              </ProjectLink>\r\n              in the\r\n              <ProjectLink to=\"https://tawiri.or.tz/conference-2/\">\r\n                Tanzania Wildlife Research Institute (TAWIRI) 13th Scientific\r\n                Conference\r\n              </ProjectLink>\r\n              in Arusha, Tanzania. In November 2021, I presented my work at the\r\n              conference virtually.\r\n            </p>\r\n  \r\n            <p>\r\n              Since then, I have gotten the opportunity to continue elephant\r\n              movement research beyond Penn State with researchers out of\r\n              <ProjectLink to=\"https://tawiri.or.tz/conference-2/\">\r\n                The Nelson Mandela Institute of Science and Technology (NM-IST)\r\n              </ProjectLink>\r\n              and the\r\n              <ProjectLink to=\"https://www.elephanttrust.org/\">\r\n                Amboseli Trust for Elephants.\r\n              </ProjectLink>\r\n            </p>\r\n  \r\n            <p>\r\n              While working through this project, I have learned how to manage my\r\n              time and outline my research goals. Each week I presented my work in\r\n              research group meetings, which has exposed me to how AI/ML research\r\n              is done, and how people ensure continued progress in self-driven\r\n              work.\r\n            </p>\r\n  \r\n            <p>\r\n              As my paper gained exposure, I have been reached out by several\r\n              people regarding my work. Notably, I was contacted by the popular\r\n              data science podcast, Data Skeptic, who interviewed me for their\r\n              series about clustering!\r\n            </p>\r\n    </Project>,\r\n    <Project\r\n            title=\"CV-BAGLE\"\r\n            subtitle=\"Computer Vision-Based Glyph and Label Extraction\"\r\n            image=\"CV-BAGLE.png\"\r\n            imgWidth={\"70%\"}\r\n            id=\"cv-bagle\"\r\n            buttonLinks={[\r\n              {text: \"Read the paper\", url: process.env.PUBLIC_URL + \"/Computer_Vision_BAsed_Glyph_and_Label_Extraction__CV_BAGLE.pdf\"}\r\n            ]}\r\n            chips={[\r\n              <DS_MLChip label=\"Computer Vision\" />,\r\n              <DS_MLChip label=\"OpenCV\" />,\r\n              <DS_MLChip label=\"Python\" />,\r\n              <DS_MLChip label=\"Synthetic Data Generation\"/>\r\n\r\n            ]}\r\n\r\n    >\r\n      <p>\r\n      From the nightly news to academic papers, you can find visualizations\r\n      nearly everywhere. In the CV-BAGLE project, my team and I developed a tool that extracts glyphs and labels from\r\n      data visualizations. An example of a glyph is a bar in a bar chart, or a line in a line chart. Labels can consist\r\n      of supplementary text in the chart, axis labels, legends, etc. Using a combination of computer vision techniques,\r\n      namely with OpenCV, along with OCR techniques (Tesseract), we were able to extract glyphs and labels from data visualizations.\r\n      From these extracted glyphs and labels, we then engineered features to be fed into a classifier to classify the chart type.\r\n      For our classification task, we achieved a training accuracy of 98.15% and testing accuracy of 81.60%. \r\n      </p>\r\n      <p>\r\n          This project involved a state-of-the-art challenge, which was no small task for my team, even though this\r\n          was a semester-long project. I learned a lot during the project, including best practices for image preprocessing when\r\n          performing contour extraction and OCR tasks. I also learned the difficulty of working with large image datasets and the\r\n          drawbacks of synthetic image generation. Finally, this project showed me what it was like to work on a team for an extended period of time \r\n          on a research project where we needed to truly start from scratch. If you would like to read about our research, you can find the full paper below.\r\n      </p>\r\n      \r\n    </Project>,\r\n    <Project\r\n            title=\"Intonation Map Creator\"\r\n            subtitle=\"Personal Project - Building data visualizations for musicians' intonation\"\r\n            image=\"IntonationMap Logo.png\"\r\n            imgWidth=\"70%\"\r\n            id=\"intonation-map-creator\"\r\n            chips={[\r\n              <DS_MLChip label=\"Data Visualization\" />,\r\n              <DS_MLChip label=\"Database management\" />,\r\n              <WebdevChip label=\"React.js\" />,\r\n              <WebdevChip label=\"D3.js\" />,\r\n              <WebdevChip label=\"Full stack development\" />,\r\n              <WebdevChip label=\"User management\" />,\r\n              <OtherChip label=\"Iterative Design\" />,\r\n              \r\n            ]}\r\n            buttonLinks={[\r\n              {text: \"Visit the site\", url: \"https://intonationmap.com/\"}\r\n            ]}\r\n    >\r\n      <p>\r\n        Any musician knows the frustration that comes with playing in tune. For many less-experienced musicians,\r\n        intonation can be a hard to grasp concept. One technique to help with intonation is to internalize the relative\r\n        intonation tendencies on your instrument. However, this can be hard to memorize and to interalize trends throughout your intrstrument,\r\n        let alone across multiple instruments.\r\n      </p>\r\n      <p>\r\n        Intonation Map Creator aims to help musicians visualize their intonation tendencies through a specially-designed data visualization\r\n        that combines traditional musical notation along with easy to understand data viz trends. With this, Intonation Map Creator brings\r\n        modern technology and data visualization techniques into the musician's practice room.\r\n      </p>\r\n      <p>\r\n        While working on this project, I consulted with many of my clarinetist friends in the Penn State School of Music, as well\r\n        as Dr. Anthony Costa, who runs the Clarinet Studio at Penn State. Using an iterative design process, I worked with Dr. Costa on the design\r\n        of the data visualization to best understand the needs of a musician working on intonation. Through this process, I learned about the incitricies of intonation practice,\r\n        which, in addition to helping me design the application, also helped me as a clarinetist myself.\r\n      </p>\r\n      <p>\r\n        The Intonation Map Creator application is deployed as a React app with the visualization created in D3.js, and the backend and hosting powered by Google Firebase.\r\n        This project allowed to to learn a lot about advanced data visualization design, user data management, and full-stack web development.\r\n      </p>\r\n\r\n    </Project>,\r\n    <Project\r\n            title=\"The Mental Health Project\"\r\n            subtitle=\"Frontend Developer - UI/UX\"\r\n            image=\"TMHP.jfif\"\r\n            imgWidth=\"50%\"\r\n            id=\"the-mental-health-project\"\r\n            chips={[\r\n              <WebdevChip label=\"React.js\" />,\r\n              <WebdevChip label=\"Material-UI\" />,\r\n              <WebdevChip label=\"Interative UI design\" />,\r\n              <WebdevChip label=\"API development\" />,\r\n              <WebdevChip label=\"Working with UI professionals\" />,\r\n            ]}\r\n          >\r\n            <p>\r\n              In this project, I worked on building a Clinical Decision Support (CDS) tool to aid mental health\r\n              profesionals in the intake process. Using machine learning processes\r\n              hosted on Azure, we processed hand-written forms and displaying\r\n              the summarized results in custom-built dashboard. My main role\r\n              throughout this project has been developing the frontend, using\r\n              React.js with Material UI.\r\n            </p>\r\n            <p>\r\n              Throughout this project I have learned a lot. My UI skills have\r\n              greatly improved as I try to understand the vision of my teammates\r\n              and bring the product to life. We have adhered to a strict theming\r\n              and styling philosophy, which needs to reflected in my work. I have\r\n              been consulted by several UI experts, and have taken their feedback\r\n              and adjusted the product accordingly.\r\n            </p>\r\n            <p>\r\n              In addition to UI skills, I have also learned how to implement an\r\n              API to fetch and updated data from the backend. This was a new\r\n              structure to a project that I had not done before, and I needed to\r\n              be open to learning a new way of building a prototype. Finally, I\r\n              got exposure to the world of mental health, and the unique issues\r\n              and poain points experienced by professionals in the field that can\r\n              be addressed with technology solutions.\r\n            </p>\r\n            <p>\r\n              This project was part of the 2021 Nittany AI Challenge.\r\n            </p>\r\n    </Project>,\r\n    <Project\r\n            title=\"OpenVessel\"\r\n            subtitle=\"Startup and 2nd place winner in the Nittany Ai Challenge 2020\"\r\n            image=\"OpenVessel Logo.png\"\r\n            imgWidth={\"90%\"}\r\n            id=\"openvessel\"\r\n            chips={[\r\n              <DS_MLChip label=\"Python\" />,\r\n              <DS_MLChip label=\"Computer Vision\" />,\r\n              <DS_MLChip label=\"SQLite\" />,\r\n              <DS_MLChip label=\"Git/Github\" />,\r\n              <WebdevChip label=\"Flask\" />,\r\n              <WebdevChip label=\"HTML/CSS\" />,\r\n              <OtherChip label=\"Technical Writing\" />,\r\n              <OtherChip label=\"Team Management\" />,\r\n              \r\n            ]}\r\n          >\r\n            <p>\r\n              This project began as a team competing for a cash prize in the{\" \"}\r\n              <a\r\n                className=\"regularLink\"\r\n                href=\"https://nittanyai.psu.edu/alliance-programs/nittany-ai-challenge/\"\r\n                target=\"_blank\"\r\n              >\r\n                Nittany AI Competition\r\n              </a>\r\n              . For the competition, we needed to develop a functioning product\r\n              that used <i>\"AI for good\"</i>. The product we created is a tool\r\n              that helps radiologists in identifying tumors in CT scans of the\r\n              lung. We used a KMeans algorithm to segment out the air and other\r\n              noise in CT scans in order for the radiologists to more easily see\r\n              where a tumor is. The model was then deployed on a Flask application\r\n              built from scratch that handles file management, users, and requests\r\n              to the server hosting our ML model. Since then, we have developed\r\n              into a startup, where my official title is CTO. We are currently\r\n              working on further understanding the research done regarding the\r\n              application of Convolutional Neural Networks (CNNs) on CT scans, and\r\n              eventually implementing a solution of our own.\r\n            </p>\r\n            <p>\r\n              While working on this project, I worked in a team environment of\r\n              technical and non-technical members using a Slack channel and Zoom\r\n              to communicate in the age of COVID. I learned to manage a large code\r\n              base via Git and GitHub, and learned many technical skills,\r\n              including:\r\n            </p>\r\n    </Project>,\r\n    <Project\r\n            title=\"Teaching an AI to play Chrome Dinosaur 🦖\"\r\n            subtitle=\"Personal project\"\r\n            image=\"dino.gif\"\r\n            imgWidth={\"80%\"}\r\n            id=\"chrome-dino\"\r\n            chips={[\r\n              <DS_MLChip label=\"Python\" />,\r\n              <DS_MLChip label=\"Pygame\" />,\r\n              <DS_MLChip label=\"NEAT-Python\" />,\r\n              <DS_MLChip label=\"Neural Networks\" />,\r\n              <DS_MLChip label=\"Simulations\" />,\r\n              <OtherChip label=\"Writing\" />\r\n            ]}\r\n            buttonLinks={[\r\n              {text: \"View the code on GitHub\", url: \"https://github.com/g1776/ChromeDinoNEAT\"},\r\n              {text: \"Read about it on Medium\", url: \"https://medium.com/@gregoryg323/neural-networks-play-chromes-dino-game-with-neat-python-defe7c46a7f8\"}\r\n            ]}\r\n          >\r\n            <p>\r\n              The classic Chrome Dinosaur game. If you're not familiar with it,\r\n              turn off your Wi-FI and open a new tab in Google Chrome for a surprise!\r\n              In this project, I taught an AI how to play Chrome Dinosaur using the\r\n              Python package \"NEAT-Python\". This package uses uses a genetic-inspired algorithm\r\n              called NEAT (NeuroEvolution of Augmenting Topologies) to create a neural Networks\r\n              that evolves over generations to get better at playing the game.\r\n            </p>\r\n\r\n            <p>\r\n              When deciding how to approach this project, a first question I had to ask was in what environment\r\n              I wanted to work in to train the AI agent. After doing some research, I found a version of\r\n              Chrome Dinosaur recreated with Pygame, which makes integration with NEAT-Python much easier.\r\n              After setting up my environment, I had to decide how the agent would be trained. This involved\r\n              understand what inputs the agent has access to to understand the state of the game, as well as\r\n              what controls (in this case, jump) it has. With this set up, training began.\r\n            </p>\r\n\r\n            <p>\r\n              At the end of the project, I was able to train an AI that seemed to be unbeatable, as it \r\n              learned to make pixel perfect jumps. You can try out the project for yourself by cloning the GitHub \r\n              repo below. Also, feel free to read more about the project in my Medium post below.\r\n            </p>\r\n    </Project>,\r\n    <Project\r\n            title=\"Analyzing Musician Wages with R\"\r\n            subtitle=\"Personal project\"\r\n            image=\"new-music-organizing-caucus.png\"\r\n            imgWidth={\"60%\"}\r\n            id=\"musician-wages\"\r\n            chips={[\r\n              <DS_MLChip label=\"R\" />,\r\n              <DS_MLChip label=\"ggplot\" />,\r\n              <DS_MLChip label=\"Data analysis, cleaning, and visualization\" />,\r\n              <DS_MLChip label=\"Presentation of Findings\" />\r\n            ]}\r\n            buttonLinks={[\r\n              {text: \"View Report EDA\", url: process.env.PUBLIC_URL + \"STAT 184 Final Project EDA.html\"},\r\n              {text: \"View Final Report\", url: process.env.PUBLIC_URL + \"STAT 184 Final Project Report - Musician Wages Analysis.html\"}\r\n            ]}\r\n            noDivider\r\n          >\r\n            <p>\r\n              Growing up I was surrounded by music. My father played piano nearly\r\n              every day, and my sister the clarinet. In 4th grade, I picked up the\r\n              clarinet and joined the school band. Since then, I have been in\r\n              countless bands, orchestras, and jazz bands, playing clarinet,\r\n              saxophone, and flute. When I started this project, I was excited to\r\n              find a dataset created by the New Music Organizing Caucus, which\r\n              gathers information about gigs of musicians. I then compare this\r\n              dataset to information gathered from the Bureau of Labor Statistics\r\n              on musicians and singers. This allows me to validate the data\r\n              gathered from the Caucus, and analyze the distribution of musicians\r\n              across the country, as well as the nature of the gigs they are\r\n              getting.\r\n            </p>\r\n            <p>\r\n              This project has been the biggest project in R I have done to date.\r\n              I learned many useful skills, including ggplot graphing tools, and\r\n              dataframe manipulating with tidyverse tools. This was my final\r\n              project for STAT 184: Introduction to R at Penn State.\r\n            </p>\r\n    </Project>\r\n  ]\r\n\r\nexport default projectsList;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Section from \"../Section\";\r\nimport projectsList from \"../projects/ProjectsList\";\r\n\r\n\r\nconst Projects = () => {\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Section header=\"Projects\" id=\"projects\">\r\n      <Grid container className={classes.content}>\r\n        {projectsList}\r\n      </Grid>\r\n    </Section>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"80%\",\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(5),\r\n  },\r\n}));\r\n\r\nexport default Projects;\r\n","import React, {useState, useEffect} from \"react\";\r\nimport { Typography, Button } from \"@material-ui/core\";\r\nimport $ from \"jquery\";\r\nimport { makeStyles, useTheme} from \"@material-ui/core/styles\";\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport useWindowSize from \"../../useWindowSize\";\r\n\r\n// import parts of the resume\r\nimport Blobs from \"./Blob\";\r\nimport Section from './Section';\r\nimport Header from \"../Header\";\r\nimport {Skills} from './Skills';\r\nimport Education from \"./Education\";\r\nimport Projects from \"./projects\";\r\nimport projectsList from \"./projects/ProjectsList\";\r\n\r\n\r\nconst PortfolioAnchorLink = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  return <HashLink to={\"/portfolio#\" + props.to} className={classes.contentsLink}>\r\n    <Typography variant=\"h4\" className={classes.contentsLink}>\r\n      <span style={{color: theme.palette.primary.main}}>#</span> {props.label}\r\n    </Typography>\r\n  </HashLink>\r\n}\r\n\r\nconst ProjectAnchorLink = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  return <HashLink to={\"/portfolio#\" + props.to} className={classes.contentsLink}>\r\n    <Typography variant=\"h4\" className={classes.contentsLink}>\r\n    &emsp;<span style={{color: theme.palette.primary.main}}>#</span> {props.label}\r\n    </Typography>\r\n    <Typography variant=\"h6\" className={classes.contentsLinkDescription}>\r\n    &emsp;{props.description}\r\n    </Typography>\r\n  </HashLink>\r\n}\r\n\r\nfunction Portfolio() {\r\n  const classes = useStyles();\r\n  const windowSize = useWindowSize();\r\n  const [blobs, setBlobs] = useState(null);\r\n\r\n  useEffect(() => {\r\n\r\n    // calculate blob pcnt \r\n    // (what percent of the window (>100%) has content that we should render blobs in?)\r\n    const screenHeight = window.screen.height\r\n    const htmlHeight = $(document).height();\r\n    const pcnt = (screenHeight / htmlHeight) * 100;\r\n    \r\n    setBlobs(<Blobs pcnt={pcnt}/>)\r\n  },[windowSize]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      {blobs}\r\n\r\n      <div className={classes.root} maxWidth=\"md\">\r\n\r\n        <Header>Portfolio</Header>\r\n\r\n        <Section header=\"Contents\" hideAccent>\r\n          {/* <Typography component=\"h3\" variant=\"h4\">Click to jump to content</Typography> */}\r\n          <PortfolioAnchorLink label=\"Education\" to=\"education\"/>\r\n          <PortfolioAnchorLink label=\"Skills\" to=\"skills\"/>\r\n          <PortfolioAnchorLink label=\"Projects\" to=\"projects\"/>\r\n          {\r\n            projectsList.map(project => {\r\n              return <ProjectAnchorLink \r\n                  label={project.props.title} \r\n                  to={project.props.id} \r\n                  description={project.props.subtitle}/>\r\n            })\r\n          }\r\n\r\n        </Section>\r\n\r\n        <Education />\r\n        <Skills />\r\n        <Projects />\r\n        \r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n    width: \"80%\",\r\n    backgroundColor: \"transparent\",\r\n    position: \"absolute\",\r\n    top: \"63%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n  contentsLink: {\r\n    margin: 0,\r\n    padding: 0,\r\n    textDecoration: \"none\",\r\n    fontWeight: \"bold\",\r\n    textIndent: \"-2em\",\r\n    paddingLeft: \"2em\",\r\n    fontSize: \"1.5rem\",\r\n    \"&:link\": {color: theme.palette.common.black},\r\n    \"&:visited\": {color: theme.palette.common.black},\r\n    \"&:hover\": {color: theme.palette.primary.main},\r\n    \"&:active\": {color: theme.palette.primary.main},\r\n\r\n  },\r\n  contentsLinkDescription: {\r\n    margin: 0,\r\n    padding: 0,\r\n    textDecoration: \"none\",\r\n    fontWeight: \"none\",\r\n    textIndent: \"-1em\",\r\n    paddingLeft: \"4em\",\r\n    fontSize: \"1.2rem\",\r\n    \"&:link\": {color: theme.palette.common.black},\r\n    \"&:visited\": {color: theme.palette.common.black},\r\n    \"&:hover\": {color: theme.palette.primary.main},\r\n    \"&:active\": {color: theme.palette.primary.main},\r\n  },\r\n  toTop: {\r\n    position: \"fixed\",\r\n    bottom: 10,\r\n    right: 10,\r\n    backgroundColor: \"#F28C2880\",\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    fontSize: \"0.8rem\",\r\n  }\r\n  \r\n}));\r\n\r\nexport default Portfolio;\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    FormControl,\r\n    Container,\r\n    Box,\r\n    Select,\r\n    MenuItem,\r\n    Button\r\n} from '@material-ui/core';\r\n\r\nconst legend = {\r\n    OP: {full: \"Observations and practice\", color: \"#66cccc\"},\r\n    BL: {full: \"Building-level score\", color: \"#ff6699\"},\r\n    TSD: {full: \"Teacher-specific data\", color: \"#9900ff\"},\r\n    \"TSD (2 or 3 Measures)\": {full: \"Teacher-specific data\", color: \"#da251c\"},\r\n    \"TSD (1 Measure)\": {full: \"Teacher-specific data\", color: \"#012e67\"}, \r\n    LEA: {full: \"LEA Selected Measures\", color: \"#954f51\"},\r\n    PG: {full: \"Performance Goals\", color: \"#ff7518\"}\r\n\r\n}\r\n\r\nconst Header = (props) => <Box style={{textAlign: \"center\"}}><Typography variant=\"h3\" style={{fontWeight: 1000, marginBottom: '100px'}}>{props.children}</Typography></Box>\r\n\r\nconst TeacherPie = (props) => {\r\n\r\n    const pie = useRef([])\r\n    const answers = useRef([])\r\n    const [done, setDone] = useState(false)\r\n\r\n\r\n    const Question = (props) => {\r\n        const [answer, setAnswer] = useState()\r\n        const [showError, setShowError] = useState(false)\r\n\r\n        const handleChange = (newAnswer) => {\r\n            if (newAnswer !== undefined) {\r\n                setShowError(false)\r\n            }\r\n            setAnswer(newAnswer)\r\n        }\r\n\r\n        const handleClick = () => {\r\n            console.log(answer)\r\n\r\n            if (answer === undefined) {\r\n                console.log(\"You must choose an answer!\")\r\n                setShowError(true)\r\n            } else {\r\n                // update list of answers\r\n                answers.current = [{question: props.children, answer: answer},...answers.current]\r\n\r\n                if (answer.slices !== undefined) {\r\n                    // update pie\r\n                    const newPie = answer.slices.map(slice => ({value: slice.value, label: slice.label, color: legend[slice.label].color}))\r\n                    pie.current = pie.current.concat(newPie);\r\n                }\r\n                if (answer.question === undefined){\r\n                    // No more questions to ask\r\n                    console.log(\"Now time to display your pie...\");\r\n                    console.log(pie.current)\r\n                    setDone(true)\r\n                } else {\r\n                    // next question\r\n                    const oldAnswer = answer;\r\n                    setAnswer(undefined) // fixes bug where answer is not undefined in next question\r\n                    props.onClick(oldAnswer.question);\r\n                }\r\n            }\r\n            \r\n        }\r\n        \r\n\r\n        return (\r\n            <>\r\n            <Box style={{marginBottom: '50px'}}>\r\n            <Typography variant=\"h4\" style={{marginBottom: '20px'}}>{props.children}</Typography>\r\n            <FormControl style={{width: \"50%\"}}>\r\n                <Select\r\n                value={answer}\r\n                onChange={e => handleChange(e.target.value)}\r\n                >\r\n                {props.options.map(o => o)}\r\n                </Select>\r\n                {showError && <Box style={{textAlign: \"right\"}}><Typography variant=\"body1\" color=\"error\"><i>Please select an option!</i></Typography></Box>}\r\n            </FormControl>\r\n            <Box style={{textAlign:\"center\", marginTop: '20px', marginBottom: '20px'}}>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    onClick={handleClick}\r\n                >\r\n                    Next\r\n                </Button>\r\n            </Box>\r\n\r\n            {props.definitions &&\r\n\r\n            <Box style={{textAlign: \"left\", paddingLeft: '200px', paddingRight: '200px'}}>\r\n                <Typography variant=\"h6\" style={{marginBottom: '10px'}}><b>Definitions</b></Typography>\r\n                <Typography variant=\"body1\">\r\n                    {props.definitions}\r\n                </Typography>\r\n            </Box>\r\n            }\r\n            </Box>\r\n            \r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    // Questions\r\n\r\n    const QDataAvailableTeacherIEP = <Question\r\n            onClick={q => setCurrentQ(q)}\r\n            definitions={\r\n                <>\r\n                <p>The supervising administrator and the classroom teacher should work cooperatively to identify IEP goals to which the educator contributes data for monitoring the progress of students with similar academic or non-academic IEP goal skill areas.</p>\r\n                <p>An LEA may establish a minimum number (an n count) for students with associated IEP Goals, below which the classroom teacher shall not be evaluated on IEP Goals Progress. The n count shall not exceed n=11.</p>\r\n                </>\r\n            }\r\n            options={[\r\n                <MenuItem value={{\r\n                    value: \"Yes\",\r\n                    slices: [\r\n                        {value: 10, label: \"TSD (2 or 3 Measures)\"},\r\n                    ]\r\n                }}>\r\n                    Yes\r\n                </MenuItem>,\r\n                <MenuItem value={{\r\n                    value: \"No\",\r\n                    slices: [\r\n                        {value: 10, label: \"TSD (1 Measure)\"},\r\n                    ]\r\n                }}>\r\n                    No\r\n                </MenuItem>\r\n            ]}\r\n        >\r\n        Do you have n >= 11 students with similar IEP goals?\r\n        </Question>\r\n\r\n\r\n    const QTeacherOtherIEP = <Question\r\n            onClick={q => setCurrentQ(q)}\r\n            definitions={\r\n                <>\r\n                <p>The supervising administrator and the classroom teacher should work cooperatively to identify IEP goals to which the educator contributes data for monitoring the progress of students with similar academic or non-academic IEP goal skill areas.</p>\r\n                <p>An LEA may establish a minimum number (an n count) for students with associated IEP Goals, below which the classroom teacher shall not be evaluated on IEP Goals Progress. The n count shall not exceed n=11.</p>\r\n                </>\r\n            }\r\n            options={[\r\n                <MenuItem value={{\r\n                    value: \"Yes\",\r\n                    slices: [\r\n                        {value: 10, label: \"TSD\"},\r\n                        {value: 10, label: \"LEA\"},\r\n                    ]\r\n                }}>\r\n                    Yes\r\n                </MenuItem>,\r\n                <MenuItem value={{\r\n                    value: \"No\",\r\n                    slices: [\r\n                        {value: 20, label: \"LEA\"},\r\n                    ]\r\n                }}>\r\n                    No\r\n                </MenuItem>\r\n            ]}\r\n        >\r\n        Do you have n >= 11 students with similar IEP goals?\r\n        </Question>\r\n\r\n\r\n    const QClassroomTeacherData = <Question\r\n            onClick={q => setCurrentQ(q)}\r\n            definitions={\r\n                <>\r\n                <div><b>Data Available Teachers</b></div>\r\n                <p>A classroom teacher who is a professional employee teaching English, language arts, mathematics, science, or other content areas as assessed by PSSA and/or Keystone Exams).</p> \r\n                <div><b>Non-Data Available Teachers</b></div>\r\n                <p>A classroom teacher teaching in a content area not assessed by an assessment.</p>\r\n                </>\r\n            }\r\n            options={[\r\n                <MenuItem value={{\r\n                    value: \"Data-Available Teacher\",\r\n                    question: QDataAvailableTeacherIEP,\r\n                    slices: [\r\n                        {value: 10, label: \"LEA\"},\r\n                        {value: 70, label: \"OP\"},\r\n                        {value: 10, label: \"BL\"}\r\n                    ]\r\n                }}>\r\n                    Data-Available Teacher\r\n                </MenuItem>,\r\n                <MenuItem value={{\r\n                    value: \"Non-Data-Available Teacher\",\r\n                    question: QTeacherOtherIEP,\r\n                    slices: [\r\n                        {value: 70, label: \"OP\"},\r\n                        {value: 10, label: \"BL\"}\r\n                    ]\r\n                }}>\r\n                    Non-Data-Available Teacher\r\n                </MenuItem>\r\n            ]}\r\n        >\r\n        What level of data do you have?\r\n        </Question>\r\n\r\n\r\n    const QRole = <Question\r\n            onClick={q => setCurrentQ(q)}\r\n            definitions={\r\n                <>\r\n                <div><b>Classroom Teacher</b></div>\r\n                <p>A professional or temporary professional employee who provides direct instruction to students related to a specific subject or grade level. </p>\r\n                <div><b>Non-Teaching Professional</b></div>\r\n                <p>An educational specialist or a professional employee or temporary professional employee who provides services and who is not a classroom teacher. (e.g., counselor, nurse, instructional coach).</p>\r\n                <div><b>Principal</b></div>\r\n                <p>Includes a building principal, an assistant principal, a vice principal, a supervisor of special education, or a director of career and technical education.</p>\r\n                </>\r\n            }\r\n            options={[\r\n                <MenuItem value={{\r\n                    value: \"Non-teaching Professional\", \r\n                    slices: [\r\n                        {value: 90, label: \"OP\"},\r\n                        {value: 10, label: \"BL\"}\r\n                            ]\r\n                    }}>\r\n                Non-teaching Professional\r\n                </MenuItem>,\r\n                <MenuItem value={{value: \"Classroom Teacher\", question: QClassroomTeacherData}}>Classroom Teacher</MenuItem>,\r\n                <MenuItem value={{\r\n                    value: \"Principal\", \r\n                    slices: [\r\n                        {value: 70, label: \"OP\"},\r\n                        {value: 20, label: \"PG\"},\r\n                        {value: 10, label: \"BL\"}\r\n                            ]\r\n                    }}>\r\n                        Principal\r\n                </MenuItem>\r\n            ]}\r\n            >What is your role?\r\n        </Question>\r\n\r\n\r\n    const QTemp = <Question\r\n            onClick={q => setCurrentQ(q)}\r\n            definitions={\r\n                <>\r\n                <div><b>Temporary Professional Employee</b></div>\r\n                <p>Any individual who has been employed to perform for a limited time the duties of a newly created position or of a regular professional employee whose service has been terminated by death, resignation, suspension, or removal.</p>\r\n                </>\r\n            }\r\n            options={[\r\n                <MenuItem value={{\r\n                    value: \"Yes\",\r\n                    slices: [\r\n                        {value: 100, label: \"OP\"},\r\n                    ]\r\n                }}>\r\n                    Yes\r\n                </MenuItem>,\r\n                <MenuItem value={{\r\n                    value: \"No\",\r\n                    question: QRole\r\n                }}>\r\n                    No\r\n                </MenuItem>\r\n            ]}\r\n            >\r\n            Are you a temporary employee?\r\n        </Question>\r\n\r\n\r\n    const [currentQ, setCurrentQ] = useState(QTemp)\r\n    const [hovered, setHovered] = useState(null);\r\n\r\n    return (\r\n        <>\r\n            {!done ?\r\n            <>\r\n                <div style={{backgroundColor:\"white\", height: \"100%\", paddingTop: '30px', textAlign: \"center\"}}>\r\n                <Header>Build your evaluation pie chart</Header>\r\n                {currentQ}\r\n                </div>\r\n            </>\r\n            :\r\n            <Box style={{backgroundColor: \"white\", height: \"100%\"}}>\r\n\r\n                {/* Header */}\r\n                <Box style={{textAlign: \"center\", backgroundColor: \"white\"}}>\r\n                    <Typography variant=\"h3\" style={{fontWeight: 1000, marginBottom: '10px'}}>Your Evaluation Pie Chart</Typography>\r\n                    <Typography style={{marginBottom: '10px'}}>Need to change your answers?</Typography>\r\n                    <Button onClick={() => window.location.reload(false)} variant=\"contained\" color=\"primary\"><b>Restart</b></Button>\r\n                </Box>\r\n                \r\n                {/* Content */}\r\n                <Grid container>\r\n                    <Grid item xs={5} style={{backgroundColor: \"white\", float: \"left\", borderRight: \"2px solid #333\"}}>\r\n                        <Container>            \r\n\r\n                        {/* Legend */}\r\n                        <Box style={{textAlign: \"center\"}}><Typography variant=\"h3\" style={{fontWeight: 1000, marginBottom: '30px'}}>Legend</Typography></Box>\r\n                            {\r\n                                pie.current.map(slice => {\r\n                                    return (\r\n                                        <>\r\n                                        <Grid container spacing={2}>\r\n                                            <Grid item xs={2}>\r\n                                                <div style={{backgroundColor: slice.color, width: '100%', height: '70%'}}></div>\r\n                                            </Grid>\r\n                                            <Grid item container xs={6} >\r\n                                            <Typography><sup><b>{slice.label} ({legend[slice.label].full})</b></sup></Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        \r\n                                        </>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <hr />\r\n\r\n                            {/* Answers */}\r\n                            <Box style={{textAlign: \"center\"}}><Typography variant=\"h3\" style={{fontWeight: 1000, marginBottom: '30px'}}>Your Answers</Typography></Box>\r\n                            {\r\n                                answers.current.reverse().map(answer => {\r\n                                return (\r\n                                    <>\r\n                                    <Typography variant=\"h5\">{answer.question}</Typography>\r\n                                    <Typography variant=\"body1\" style={{marginBottom: '15px'}}>{answer.answer.value}</Typography>\r\n                                    </>\r\n                                )\r\n                            })\r\n                            }  \r\n                        </Container>\r\n                    </Grid>\r\n                    <Grid item xs={7}>\r\n                    <div style={{backgroundColor:\"white\", height: \"80vh\", textAlign: \"center\"}}>\r\n                        <PieChart\r\n                            data={\r\n                                pie.current.map(slice => ({ title: slice.label, value: slice.value, color: slice.color}))\r\n                                }\r\n                            onMouseOver={(_, index) => {\r\n                                setHovered(index);\r\n                                }}\r\n                                onMouseOut={() => {\r\n                                setHovered(null);\r\n                                }}\r\n                            animate\r\n                            animationDuration={1000}\r\n                            label={({ dataEntry }) => `${Math.round(dataEntry.percentage)} % ${dataEntry.title}`}\r\n                            labelStyle={{fontSize: '1px', fontFamily: 'sans-serif'}}\r\n                            radius={12}\r\n                            labelPosition={112}\r\n                            center={[15,15]}\r\n                            viewBoxSize={[30,30]}    \r\n                        />\r\n                        <ReactTooltip\r\n                            getContent={() =>\r\n                            hovered ? pie.current[hovered].label : null\r\n                            }\r\n                        />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TeacherPie","import { useEffect } from 'react'\r\nimport { useParams } from \"react-router\"\r\nimport TeacherPie from \"./TeacherPie\";\r\nimport { useNav } from '../nav/NavProvider'\r\n\r\n\r\nconst MiscSwitch = (props) => {\r\n    const { page } = useParams();\r\n    const { closeNav } = useNav();\r\n    useEffect(() => {\r\n        closeNav()\r\n    },[])\r\n\r\n    switch (page) {\r\n        case \"teacher-pie\":\r\n            return <TeacherPie/>\r\n    \r\n        default:\r\n            return <div>No webpage here!</div>\r\n    }\r\n\r\n}\r\n\r\nexport default MiscSwitch;","import { Grid, Link, Typography } from \"@material-ui/core\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\n\r\nimport theme from \"../../theme\";\r\n\r\nconst SocialThumb = ({ link, label, Icon}) => (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      style={{ alignItems: \"center\" }}\r\n    >\r\n      <Link href={link}>\r\n        <Icon\r\n          fontSize=\"large\"\r\n          style={{\r\n            marginRight: theme.spacing(1),\r\n            top: 10,\r\n            position: \"relative\",\r\n          }}\r\n        />\r\n        <Typography variant=\"h5\" style={{ display: \"inline\" }}>\r\n          {label}\r\n        </Typography>\r\n      </Link>\r\n    </Grid>\r\n  );\r\n\r\nconst Socials = () => {\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <SocialThumb\r\n          link=\"https://github.com/g1776\"\r\n          label=\"github.com/g1776\"\r\n          Icon={GitHubIcon}\r\n        />\r\n        <SocialThumb\r\n          link=\"mailto:gregoryg323@gmail.com\"\r\n          label=\"gregoryg323@gmail.com\"\r\n          Icon={EmailIcon}\r\n        />\r\n        <SocialThumb\r\n          link=\"https://www.linkedin.com/in/gregory-glatzer\"\r\n          label=\"linkedin.com/in/gregory-glatzer\"\r\n          Icon={LinkedInIcon}\r\n        />\r\n        \r\n      </Grid>\r\n    );\r\n  };\r\n\r\nexport default Socials;","import { \r\n    makeStyles,\r\n    Container,\r\n    Grid\r\n } from \"@material-ui/core\";\r\n\r\nimport Header from \"../Header\";\r\nimport Socials from \"./Socials\";\r\n\r\nconst Contact = () => {\r\n    const classes = useStyles();\r\n\r\n    return <Container className={classes.root}>\r\n        <Header>Contact</Header>\r\n        <Grid container spacing={4}>\r\n            <Grid item xs={12} md={6}>\r\n                <Socials />\r\n            </Grid>\r\n            <Grid item xs={12} md={6} className={classes.imgContainer}>\r\n            <img src={process.env.PUBLIC_URL + '/me2.jpg'} className={classes.img} alt=\"Gregory Glatzer\" />\r\n            </Grid>\r\n        </Grid>\r\n    </Container>\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: \"80%\",\r\n      marginBottom: theme.spacing(5)\r\n    },\r\n    imgContainer: {\r\n        justifyContent: \"center\"\r\n    },\r\n    img: {\r\n        width: \"100%\",\r\n        height: \"auto\"\r\n    }\r\n}));\r\n\r\nexport default Contact;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  HashRouter,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from 'react-router-dom'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from './theme';\r\nimport NavProvider from './components/nav/NavProvider';\r\n\r\nimport './style.css'\r\n\r\n// import Home from './components/Home';\r\nimport Home from './components/home/';\r\nimport Portfolio from './components/portfolio';\r\nimport MiscSwitch from './components/misc';\r\nimport Contact from './components/contact';\r\n\r\n\r\nReactDOM.render(\r\n  <div style={{display: \"flex\", flexFlow: \"column\", height: \"100%\"}}>\r\n  <ThemeProvider theme={theme}>\r\n  \r\n    <CssBaseline />\r\n    <HashRouter>\r\n    <NavProvider>\r\n      <div style={{flex: \"1 1 auto\"}}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/resume\" component={Portfolio} />\r\n          <Route path=\"/portfolio\" component={Portfolio} />\r\n          <Route path=\"/misc/:page\" component={MiscSwitch} />\r\n          <Route path=\"/contact\" component={Contact} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n      </NavProvider>\r\n    </HashRouter>\r\n  \r\n  </ThemeProvider>\r\n  </div>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}